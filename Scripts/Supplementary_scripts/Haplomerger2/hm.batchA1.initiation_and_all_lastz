#### hm.batchA1.initiation_and_lastz v1.50
####
#### This shell script does two tasks:
#### 1) to create an environment that contains all the files and directories required for later use,
#### 2) and to perform whole genome pairwise self alignments by using lastz (all against all).

#### setting variables
name=$1								# the species_name or the prefix of the genome file name
threads=30							# the number of cpu cores to use (default=1)
identity=80						# output only lastz alignments >= $identity (default=80)
                      # normally, you do not need to change identity because the program will optimize it 
targetSize=16400000   # split target fasta file by size N bp (default=50000000)
                      # NOTE: if you use 8 or 16 CPUs, you may need to choose a proper value to
                      # divide the target sequence file in order to exploit the benifit of multiple CPUs 
querySize=98400000  # split query fasta file by size N bp (default=1600000000)

###################################################################################################
#### running
if [ $# -eq 0 ]
	then
		echo
		echo "Species name or the prefix of your genome file name is required !"
		echo ""
		echo "USAGE: $0 species_name"
		echo
		echo "Note that your genome sequence file should be"
		echo "gzip compressed fasta file called assembly_name.fa.gz ."
		echo 
		exit 1
	elif [ ! -f $1.fa.gz ]
	then
		echo
		echo "$1.fa.gz is not found !"
		echo 
		exit 1	
fi

#### print out output file names
echo
echo ">>> Running command : $0 $1"
echo 
echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo
echo "These files/directories are going to be output :"
echo "  ${name}x.fa.gz - a copy of the genome sequence file $name.fa(.gz)"
echo "  $name.sizes - the size of each scaffold sequences"
echo "  ${name}x.sizes - the size of each scaffold sequences"
echo "  $name.seq/*.fa and *.nib - fasta files and nib files for scaffold sequences"
echo "  ${name}x.seq/*.fa and *.nib - fasta files and nib files for scaffold sequences"
echo "  *** $name.${name}x.result/raw.axt/*.axt, *.axt.*, and *.log - raw lastz result files and their log files"
echo "log files:"
echo "  _A1.initiation.log - log file"
echo "  _A1.all_lastz.log - log file"
echo 

#### ===========================================================
#### create the project environment
#### ===========================================================

rm -f -r $name.seq ${name}x.seq $name.sizes ${name}x.sizes ${name}x.fa.gz
perl ../bin/initiation.pl --faSplit --faToNib --faSize --Species $name --Force --Delete \
	1>_A1.initiation.log 2>>_A1.initiation.log
ln -s $name.fa.gz ${name}x.fa.gz
ln -s $name.sizes ${name}x.sizes
ln -s $name.seq ${name}x.seq

#### ===========================================================
#### run lastz all against all
#### ===========================================================

## require two control files: 1) all_lastz.ctl|$name.{name}x.ctl, and 2) scoreMatrix.q|$name.${name}x.q

rm -f -r $name.${name}x.result/raw.axt
perl ../bin/HM_all_lastz_mThreads.pl --Species $name ${name}x --noself --threads=$threads --identity=$identity \
  --targetSize=$targetSize --querySize=$querySize --Force --Delete \
  1>_A1.all_lastz.log 2>>_A1.all_lastz.log


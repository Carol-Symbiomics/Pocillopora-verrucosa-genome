#### hm.batchB2.chainNet_and_netToMaf v1.50
####
#### This shell script does two things:
#### 1) to create chain and net files.
#### 2) to creates an alignment file (in gzip-compressed maf format) based on the net file.

#### setting variables
name=$1								# the species_name or the prefix of the genome file name
threads=30							# the number of cpu cores to use (default=1)

###################################################################################################
#### running
if [ $# -eq 0 ]
	then
		echo
		echo "Species name or the prefix of your genome file name is required !"
		echo ""
		echo "USAGE: $0 species_name"
		echo
		echo "Note that your genome sequence file should be"
		echo "gzip compressed fasta file called assembly_name.fa.gz ."
		echo 
		exit 1
	elif [ ! -f $1.fa.gz ]
	then
		echo
		echo "$1.fa.gz is not found !"
		echo 
		exit 1	
fi

#### print out output file names
echo
echo ">>> Running command : $0 $1"
echo 
echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
echo
echo "These files/directories are going to be output :"
echo "  $name.${name}x.result/all.chain.gz - raw chain file, gzip compressed"
echo "  $name.${name}x.result/all.tbest.chain.gz - target-best chain file"
echo "  $name.${name}x.result/all.tbest.net - target-best net file"
echo "  *** $name.${name}x.result/all.rbest.chain.gz - reciprocal best chain file, gzip compressed"
echo "  *** $name.${name}x.result/all.rbest.net.gz - reciprocal best net file, gzip compressed"
echo "  *** $name.${name}x.result/zeroMinSpace.rbest.net.gz - the zeroMinSpace net file"
echo "  *** $name.${name}x.result/mafFiltered.net.gz - the net file for mafFiltered.net.maf.gz"
echo "  *** $name.${name}x.result/mafFiltered.net.maf.gz - maf alignments, all scaffolds in one file, deleted" 
echo "  *** $name.${name}x.result/mafFiltered.net.maf.tar.gz - maf alignments, one file per scaffold, for viewing" 
echo "log files:"
echo "  $name.${name}x.result/*.log - log files for HM_axtChainRecipBestNet.pl"
echo "  _B2.axtChainRecipBestNet.log - log file"
echo "  _B2.netToMaf.log - log file"
echo
echo "*** NOTE THAT you may delete the directory"
echo "*** $name.${name}x.result/raw.axt after having sucessfully finished this script!"
echo

#### ===========================================================
#### run axtChainRecipBestNet
#### ===========================================================
		
perl ../bin/HM_axtChainRecipBestNet.pl --rbestNet --axtChain --tbest --zeroMinSpaceNet --threads=$threads \
	--axtSuffix=axt.self.notrivial --linearGap=medium --minScore=1000 --minScore2=2000 \
	--Species $name ${name}x --Force --Delete \
	1>_B2.axtChainRecipBestNet.log 2>>_B2.axtChainRecipBestNet.log

#### ===========================================================
#### run netToMaf
#### ===========================================================

rm -f $name.${name}x.result/mafFiltered.net.gz
ln -s all.rbest.net.gz $name.${name}x.result/mafFiltered.net.gz

perl ../bin/HM_netToAxtMaf.pl    \
  --Species $name ${name}x       \
  --Force                        \
  --netFile=mafFiltered.net.gz   \
  --chainFile=all.rbest.chain.gz \
  1>_B2.netToMaf.log 2>>_B2.netToMaf.log

perl ../bin/mafSplitByTarget.pl                \
  $name.${name}x.result/mafFiltered.net.maf.gz \
  1>>_B2.netToMaf.log 2>>_B2.netToMaf.log

tar -czf $name.${name}x.result/mafFiltered.net.maf.tar.gz $name.${name}x.result/mafFiltered.net.maf
rm -f -r $name.${name}x.result/mafFiltered.net.maf
rm -f $name.${name}x.result/mafFiltered.net.maf.gz


#### ===========================================================
#### extra messages
#### ===========================================================

echo
echo "***********************************************************************************"
echo "*** NOTE THAT if this script finished sucessfully, you can delete the directory "
echo "*** $name.${name}x.result/raw.axt to save tens of gigabases' disk space !"
echo "***********************************************************************************"
echo
